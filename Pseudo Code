// In the main function we get text files from user. If there are more than two files, we compare first file with second and their result with third so on.
//Function to convert text file to string
Convert_to_String(File)
1.	Aj=File.length
2.	Let A[0….j] be a string 
3.	for i=0 to j
4.		A[i]= character of file
5.	return A
Clear_Sensitivity(A)
1.	for i =0 to A.length
2.		if  A[i] >= 65 and A[i] <= 92 
3.			A[i] = A[i] +32
4.	return A
Remove_Spaces(A)
1.	i = 1
2.	size = A.length
3.	while i <= A.length
4.	    	if A[i] = “ ”
5.			A[i] = A[i+1] 
6.			size = size- 1
7.	return A, size
LCS_length( X, Y)
1.	m = X.length
2.	n = Y.length
3.	let b[1…m,1…n] and c[0…m,0...n] be new tables	
4.	for i = 0 to m
5.		c[i][0] = 0
6.	for j = 0 to n
7.		c[0][j] = 0
8.	for i = 1 to m
9.		for j = 1 to n
10.			if  x[ i] == y[ j]
11.				c[i][j] = c[i - 1][j - 1] + 1
12.				b[i][j] = '/'
13.			else if c[i - 1][j] >= c[i][j - 1]
14.				c[i][j] = c[i - 1][j]
15.				b[i][j] = '|'
16.			else c[i - 1][j] = c[i][j - 1]
17.				c[i][j] = c[i][j - 1]
18.				b[i][j] = '-'
19.	return c and b
//Getting common characters and their index
Print_LCS( b, X, i, j)
1.	int q=0
2.	let D[0…i] be the array to keep index 
3.	if  i == 0 or j == 0
4.		return 
5.	if  b[i][j] == '/'
6.		Print_LCS(b, x, i - 1, j - 1)
7.		print x[i]
8.		D[q] = i
9.		q = q+1
10.		return D
11.	else if b[i][j] == '|'
12.		Print_LCS(b, x, i - 1, j)
13.	else  Print_LCS(b, x, i, j - 1)
This takes O ( m + n ) since either i or j is decremented in the recursion
// Getting percentage of Plagiarism		
Plagiarism_Percentage (D,A)
// A is given file here
1.	i=A.length
2.	x=D.length
3.	p=x/i *100
4.	print p
